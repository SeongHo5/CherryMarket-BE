name: MarketCHERRY-BackEnd CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:

  cherrymarket-backend:
    permissions: write-all
    name: MarketCHERRY-BackEnd CD
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Perform pre-build preparation
        run: |
          chmod +x ./gradlew
          cd ./src/main
          mkdir -p resources
          cd resources
          touch ./application.properties
            echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.properties
        shell: bash

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build & Test with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info

      - name: Add comment test result to PR
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: Add coverage comment to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          title: üìù Code Coverage Report
          paths: ${{ github.workspace }}/**/build/reports/jacoco/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60

      - name: Add comment when test failed
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ secrets.GIT_TOKEN }}

      - name: Slack Notification when build and test failed
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: <BackEnd-CD> Build & Test Failed
          fields: repo, message, commit, author, action, eventName, workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

      - name: Deploy to Naver Cloud Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            cd ~/cherrymarket-be
            git pull
            ./gradlew clean build -x test
            bash ./deploy/deploy.sh
            

