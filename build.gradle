plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.graalvm.buildtools.native' version '0.9.28'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}

group = 'com.cherrydev'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

jacoco {
    toolVersion = "0.8.8"
}

sonar {
    properties {
        property "sonar.projectKey", "devcherry_cherrymarket"
        property "sonar.organization", "devcherry"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // SPRING BOOT
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // SPRING BOOT DEV
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // SPRING DATA
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

    // JSON
    implementation group: 'org.json', name: 'json', version: '20230227'

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // MAIL
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // AWS-SDK-S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.112'

    // GOOGLE API
    implementation 'com.google.api-client:google-api-client:1.31.5'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
    testImplementation 'org.projectlombok:lombok'
    testImplementation 'org.assertj:assertj-core:3.19.0'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn(test)
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
